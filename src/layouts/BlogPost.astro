---
import Seo from "../components/Seo.astro";
import { type Post, type PostIndex } from "../types/Post";
import { getNextAndPrevBlogs } from "../utils/blogPosts";
import NextLinks from "../components/NextLinks.astro";
import Layout from "./Layout.astro";

export interface Props {
  content: Post;
}

const {
  content: { title, description, pubDate, updatedDate, heroImage, disableNextBlogLinks = false },
} = Astro.props as Props;

let nextPost: PostIndex | undefined;
let prevPost: PostIndex | undefined;

if (!disableNextBlogLinks) {
  const posts = (await Astro.glob("../pages/blog/*.{md,mdx}"))
    .sort((a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf())
    .map(({ frontmatter: { title, pubDate, updatedDate, heroImage }, url }) => ({
      title,
      pubDate,
      updatedDate,
      heroImage,
      url,
    }));

  const nextAndPrevBlogs = getNextAndPrevBlogs(posts, title);
  nextPost = nextAndPrevBlogs.nextPost;
  prevPost = nextAndPrevBlogs.prevPost;
}
---

<Layout>
  <Seo
    slot="header"
    seo={{
      title,
      description,
      image: heroImage,
    }}
  />
  <div>
    <article class="p-2 max-w-prose mb-4">
      {heroImage && <img class="bg-clip-border rounded-lg" width={720} height={360} src={heroImage} alt="" />}
      <h1 class="title">{title}</h1>
      {pubDate && <time class="text-sm">{pubDate}</time>}
      {
        updatedDate && (
          <div class="text-sm">
            Last updated on <time>{updatedDate}</time>
          </div>
        )
      }
      <hr />
      <slot />
    </article>
  </div>
</Layout>